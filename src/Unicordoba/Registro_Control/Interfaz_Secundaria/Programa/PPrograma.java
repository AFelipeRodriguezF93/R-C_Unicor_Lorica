/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Unicordoba.Registro_Control.Interfaz_Secundaria.Programa;

import Unicordoba.Registro_Control.Base_de_Datos.Controlador.ProgramaJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.IllegalOrphanException;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.NonexistentEntityException;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Facultad;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Programa;
import Unicordoba.Registro_Control.Interfaz_Secundaria.Basica.Estado_Ventana;
import Unicordoba.Registro_Control.Interfaz_Secundaria.Basica.IPanelEdicion;
import Unicordoba.Registro_Control.Interfaz_Secundaria.Facultad.PFacultad;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author AndresFelipe
 */
public class PPrograma extends javax.swing.JPanel implements IPanelEdicion {

    private EntityManagerFactory entityManagerFactory;
    private EntityManager entityManager;
    Programa programa = new Programa();
    
    /**
     * Creates new form PPrograma
     */
    public PPrograma() {
        initComponents();
        CarcarCBUniversidades();
    }
    
    public void CarcarCBUniversidades(){
        
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        entityManager = entityManagerFactory.createEntityManager();
        Iterator iterator = entityManager.createNamedQuery("Facultad.findAll").getResultList().iterator();
        while (iterator.hasNext()){
            this.CBFacultades.addItem(((Facultad)iterator.next()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        LFaculdad = new javax.swing.JLabel();
        LNombrePrograma = new javax.swing.JLabel();
        LCodigo = new javax.swing.JLabel();
        LNomJefePrograma = new javax.swing.JLabel();
        TFieldNombrePrograma = new javax.swing.JTextField();
        TFieldCodigo = new javax.swing.JTextField();
        TFieldNomJefePrograma = new javax.swing.JTextField();
        CBFacultades = new javax.swing.JComboBox();

        setLayout(new java.awt.GridBagLayout());

        LFaculdad.setText("Faculdad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 10, 0, 0);
        add(LFaculdad, gridBagConstraints);

        LNombrePrograma.setText("Nombre del Programa:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 10, 0, 0);
        add(LNombrePrograma, gridBagConstraints);

        LCodigo.setText("Codigo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 10, 0, 0);
        add(LCodigo, gridBagConstraints);

        LNomJefePrograma.setText("Nombre jefe del programa:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 10, 0, 0);
        add(LNomJefePrograma, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 235;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 10, 0, 10);
        add(TFieldNombrePrograma, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 235;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 0, 10);
        add(TFieldCodigo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 235;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 27, 10);
        add(TFieldNomJefePrograma, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 213;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 0, 10);
        add(CBFacultades, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CBFacultades;
    private javax.swing.JLabel LCodigo;
    private javax.swing.JLabel LFaculdad;
    private javax.swing.JLabel LNomJefePrograma;
    private javax.swing.JLabel LNombrePrograma;
    private javax.swing.JTextField TFieldCodigo;
    private javax.swing.JTextField TFieldNomJefePrograma;
    private javax.swing.JTextField TFieldNombrePrograma;
    // End of variables declaration//GEN-END:variables

    @Override
    public void Guardar(Estado_Ventana estado_Ventana) {
        /*try {
            entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
            ProgramaJpaController programaJpaController = new ProgramaJpaController(entityManagerFactory);
            programa.setNombre(TFieldNombrePrograma.getText());
              
                        
            if (estado_Ventana.equals(Estado_Ventana.NUEVO)) {
                programaJpaController.create(programa);
            } else {
                programa.setId(programa.getId());
                programaJpaController.edit(programa);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }  */
    }

    @Override
    public void Eliminar() {
        try {
            entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
            ProgramaJpaController programaJpaController =new ProgramaJpaController(entityManagerFactory);
            //facultad.setId(facultad.getId());
            programaJpaController.destroy(programa.getId());            
        } catch (NonexistentEntityException ex) {
            ex.printStackTrace();
        } catch (IllegalOrphanException ex) {
            Logger.getLogger(PFacultad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void ActivarEdicion() {
        
    }

    @Override
    public void Nuevo() {
        programa = new Programa();
    }

    @Override
    public void Seleccionar(Vector vectorSeleccion) {

    }

    @Override
    public List<Object[]> getListaParaTabla() {
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        ProgramaJpaController programaJpaController = new ProgramaJpaController(entityManagerFactory);
        
        List<Object[]> list = new ArrayList();
        for (Programa programa : programaJpaController.findProgramaEntities()) {
            list.add(new Object[]{
                programa.getFacultadid().getNombre(),
                programa.getCodigo(),
                programa.getNombre(), 
                programa.getJefePrograma()
            });
        }
        return list;
    }

    @Override
    public String[] getNombreDeColumnas() {
        return new String[]{"Faculdad", "Codigo", "Nombre","Jefe de Progama",};
    }
}

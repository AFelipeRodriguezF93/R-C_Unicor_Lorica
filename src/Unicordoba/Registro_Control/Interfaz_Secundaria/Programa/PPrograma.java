/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Unicordoba.Registro_Control.Interfaz_Secundaria.Programa;

import Unicordoba.Registro_Control.Base_de_Datos.Controlador.FacultadJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.ProgramaJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.IllegalOrphanException;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.NonexistentEntityException;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Facultad;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Programa;
import Unicordoba.Registro_Control.Interfaz_Secundaria.BasicaUno.Estado_Ventana;
import Unicordoba.Registro_Control.Interfaz_Secundaria.BasicaUno.IPanelEdicion;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author AndresFelipe
 */
public class PPrograma extends javax.swing.JPanel implements IPanelEdicion {
   
    /**
     * Creates new form PPrograma
     */
    public PPrograma() {
        initComponents();
        CarcarCBUniversidades();
        EstadoCampos();
    }
    
    public void CarcarCBUniversidades(){        
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        List<Facultad> list = new FacultadJpaController(entityManagerFactory).findFacultadEntities();
        for (Facultad list1 : list) {
            CBFacultades.addItem(list1);
        }
    }

    public void EstadoCampos(){
        TFieldNombrePrograma.setEnabled(false);
        TFieldCodigo.setEnabled(false);
        CBFacultades.setEnabled(false);
        TFieldNomJefePrograma.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LFaculdad = new javax.swing.JLabel();
        LNombrePrograma = new javax.swing.JLabel();
        LCodigo = new javax.swing.JLabel();
        LNomJefePrograma = new javax.swing.JLabel();
        TFieldNombrePrograma = new javax.swing.JTextField();
        TFieldCodigo = new javax.swing.JTextField();
        TFieldNomJefePrograma = new javax.swing.JTextField();
        CBFacultades = new javax.swing.JComboBox();

        LFaculdad.setText("Faculdad:");

        LNombrePrograma.setText("Nombre del Programa:");

        LCodigo.setText("Codigo:");

        LNomJefePrograma.setText("Nombre jefe del programa:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LCodigo)
                    .addComponent(LNombrePrograma)
                    .addComponent(LFaculdad)
                    .addComponent(LNomJefePrograma))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFieldNomJefePrograma)
                    .addComponent(CBFacultades, 0, 241, Short.MAX_VALUE)
                    .addComponent(TFieldNombrePrograma)
                    .addComponent(TFieldCodigo))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LNombrePrograma))
                    .addComponent(TFieldNombrePrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LCodigo))
                    .addComponent(TFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LFaculdad))
                    .addComponent(CBFacultades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LNomJefePrograma))
                    .addComponent(TFieldNomJefePrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CBFacultades;
    private javax.swing.JLabel LCodigo;
    private javax.swing.JLabel LFaculdad;
    private javax.swing.JLabel LNomJefePrograma;
    private javax.swing.JLabel LNombrePrograma;
    private javax.swing.JTextField TFieldCodigo;
    private javax.swing.JTextField TFieldNomJefePrograma;
    private javax.swing.JTextField TFieldNombrePrograma;
    // End of variables declaration//GEN-END:variables

    private EntityManagerFactory entityManagerFactory;
    private EntityManager entityManager;
    private Programa programa = null;
    
    @Override
    public void Guardar(Estado_Ventana estado_Ventana) {
        try {
            entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
            
            programa.setNombre(TFieldNombrePrograma.getText());
            programa.setCodigo(Integer.valueOf(TFieldCodigo.getText())); 
            programa.setFacultadid((Facultad) CBFacultades.getSelectedItem());
            programa.setJefePrograma(TFieldNomJefePrograma.getText());
            ProgramaJpaController programaJpaController = new ProgramaJpaController(entityManagerFactory);
            if (estado_Ventana.equals(Estado_Ventana.NUEVO)) {
                programaJpaController.create(programa);
            } else {
                programa.setId(programa.getId());
                programaJpaController.edit(programa);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }

    @Override
    public void Eliminar() {
        try {
            entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
            ProgramaJpaController programaJpaController = new ProgramaJpaController(entityManagerFactory);
            programaJpaController.destroy(programa.getId());          

        } catch (NonexistentEntityException ex) {
            ex.printStackTrace();
        } catch (IllegalOrphanException ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public void ActivarEdicion() {
        
    }

    @Override
    public void Nuevo() {
        programa = new Programa();
    }

    @Override
    public void Seleccionar(Vector vectorSeleccion) {
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        ProgramaJpaController programaJpaController = new ProgramaJpaController(entityManagerFactory);
        
        this.programa = programaJpaController.findPrograma(Integer.valueOf(vectorSeleccion.get(0).toString()));
        TFieldNombrePrograma.setText(programa.getNombre());
        TFieldCodigo.setText(programa.getCodigo()+"");
        CBFacultades.setSelectedItem(programa.getFacultadid().getNombre());
        TFieldNomJefePrograma.setText(programa.getJefePrograma());              
    }

    @Override
    public List<Object[]> getListaParaTabla() {
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        ProgramaJpaController programaJpaController = new ProgramaJpaController(entityManagerFactory);
        
        List<Object[]> list = new ArrayList();
        for (Programa programa : programaJpaController.findProgramaEntities()) {
            list.add(new Object[]{
                programa.getId(),
                programa.getNombre(), 
                programa.getCodigo(),                
                programa.getFacultadid().getNombre(),
                programa.getJefePrograma()
            });
        }
        return list;
    }

    @Override
    public String[] getNombreDeColumnas() {
        return new String[]{"ID", "Nombre", "Codigo", "Faculdad",  "Jefe de Progama",};
    }
}

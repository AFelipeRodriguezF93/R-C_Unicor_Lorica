/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Unicordoba.Registro_Control.Interfaz_Secundaria.Facultad;

import Unicordoba.Registro_Control.Base_de_Datos.Controlador.FacultadJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.UniversidadJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.IllegalOrphanException;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.NonexistentEntityException;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Facultad;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Universidad;
import Unicordoba.Registro_Control.Interfaz_Secundaria.BasicaUno.Estado_Ventana;
import Unicordoba.Registro_Control.Interfaz_Secundaria.BasicaUno.IPanelEdicion;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;

/**
 *
 * @author AndresFelipe
 */
public class PFacultad extends javax.swing.JPanel implements IPanelEdicion {
   
    /**
     * Creates new form Facultad
     */
    public PFacultad() {
        initComponents();
        CarcarCBUniversidades();  
        EstadoCampos();
    }
    
    public void CarcarCBUniversidades(){        
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        List<Universidad> list = new UniversidadJpaController(entityManagerFactory).findUniversidadEntities();
        for (Universidad list1 : list) {
            CBUniversidad.addItem(list1);
        }
    }
    
    public void EstadoCampos(){
        TFieldNombreFacultad.setEnabled(false);
        CBUniversidad.setEnabled(false);
        TFieldNombreDecano.setEnabled(false);
        TFieldUbicacion.setEnabled(false);
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LNombreFacultad = new javax.swing.JLabel();
        LNombreDecano = new javax.swing.JLabel();
        LUbicacion = new javax.swing.JLabel();
        TFieldNombreFacultad = new javax.swing.JTextField();
        TFieldNombreDecano = new javax.swing.JTextField();
        TFieldUbicacion = new javax.swing.JTextField();
        LUniversidad = new javax.swing.JLabel();
        CBUniversidad = new javax.swing.JComboBox();

        LNombreFacultad.setText("Nombre de la Facultad:");

        LNombreDecano.setText("Nombre del Decano:");

        LUbicacion.setText("Ubicaci√≥n:");

        LUniversidad.setText("Universidad:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LUniversidad)
                    .addComponent(LNombreFacultad)
                    .addComponent(LNombreDecano)
                    .addComponent(LUbicacion))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFieldUbicacion)
                    .addComponent(TFieldNombreDecano)
                    .addComponent(TFieldNombreFacultad)
                    .addComponent(CBUniversidad, 0, 261, Short.MAX_VALUE))
                .addGap(9, 9, 9))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LNombreFacultad))
                    .addComponent(TFieldNombreFacultad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LUniversidad))
                    .addComponent(CBUniversidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LNombreDecano))
                    .addComponent(TFieldNombreDecano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(LUbicacion))
                    .addComponent(TFieldUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox CBUniversidad;
    private javax.swing.JLabel LNombreDecano;
    private javax.swing.JLabel LNombreFacultad;
    private javax.swing.JLabel LUbicacion;
    private javax.swing.JLabel LUniversidad;
    private javax.swing.JTextField TFieldNombreDecano;
    private javax.swing.JTextField TFieldNombreFacultad;
    private javax.swing.JTextField TFieldUbicacion;
    // End of variables declaration//GEN-END:variables

    private EntityManagerFactory entityManagerFactory;
    private EntityManager entityManager;
    private Facultad facultad = null;
    
    @Override
    public void Guardar(Estado_Ventana estado_Ventana ) {
        try {
            entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
            
            facultad.setNombre(TFieldNombreFacultad.getText());
            facultad.setUniversidadid((Universidad) CBUniversidad.getSelectedItem());
            facultad.setDecano(TFieldNombreDecano.getText());
            facultad.setUbicacion(TFieldUbicacion.getText());          
            FacultadJpaController facultadJpaController = new FacultadJpaController(entityManagerFactory);
            if (estado_Ventana.equals(Estado_Ventana.NUEVO)) {
                facultadJpaController.create(facultad);
            } else {
                facultad.setId(facultad.getId());
                facultadJpaController.edit(facultad);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    @Override
    public void Eliminar() {
        try {
            entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
            FacultadJpaController facultadJpaController = new  FacultadJpaController(entityManagerFactory);
            facultadJpaController.destroy(facultad.getId());          

        } catch (NonexistentEntityException ex) {
            ex.printStackTrace();
        } catch (IllegalOrphanException ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public void ActivarEdicion() {
        
    }

    @Override
    public void Nuevo() {
        facultad = new Facultad();
    }

    @Override
    public void Seleccionar(Vector vectorSeleccion) {
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        FacultadJpaController facultadJpaController = new FacultadJpaController(entityManagerFactory);
        
        this.facultad = facultadJpaController.findFacultad(Integer.valueOf(vectorSeleccion.get(0).toString()));
        TFieldNombreFacultad.setText(facultad.getNombre());
        CBUniversidad.setSelectedItem(facultad.getUniversidadid().getNombre());
        TFieldNombreDecano.setText(facultad.getDecano());
        TFieldUbicacion.setText(facultad.getUbicacion());        
    }

    @Override
    public List<Object[]> getListaParaTabla() {
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        FacultadJpaController facultadJpaController = new FacultadJpaController(entityManagerFactory);

        List<Object[]> list = new ArrayList();
        for (Facultad facultad : facultadJpaController.findFacultadEntities()) {
            list.add(new Object[]{
                facultad.getId(),
                facultad.getUniversidadid().getNombre(),
                facultad.getNombre(), 
                facultad.getDecano(),
                facultad.getUbicacion() 
            });
        }
        return list;
    }

    @Override
    public String[] getNombreDeColumnas() {
        return new String[]{"ID", "Universidad", "Nombre","Decano","Ubicacion"};
    }  
}

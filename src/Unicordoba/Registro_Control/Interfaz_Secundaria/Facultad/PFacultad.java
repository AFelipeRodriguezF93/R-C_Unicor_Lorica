/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Unicordoba.Registro_Control.Interfaz_Secundaria.Facultad;

import Unicordoba.Registro_Control.Base_de_Datos.Controlador.FacultadJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.IllegalOrphanException;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.NonexistentEntityException;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Facultad;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Universidad;
import Unicordoba.Registro_Control.Interfaz_Secundaria.Basica.Estado_Ventana;
import Unicordoba.Registro_Control.Interfaz_Secundaria.Basica.IPanelEdicion;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;

/**
 *
 * @author AndresFelipe
 */
public class PFacultad extends javax.swing.JPanel implements IPanelEdicion {

    private EntityManagerFactory entityManagerFactory;
    private EntityManager entityManager;
    Facultad facultad = new Facultad();
    
    /**
     * Creates new form Facultad
     */
    public PFacultad() {
        initComponents();
        CarcarCBUniversidades();        
    }
    
    public void CarcarCBUniversidades(){
        
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        entityManager = entityManagerFactory.createEntityManager();
        Query query = entityManager.createNamedQuery("Universidad.findAll");
        
        //Iterator iterator = entityManager.createNamedQuery("Universidad.findAll").getResultList().iterator();
        //while (query.){
        //    this.CBUniversidad.addItem(((Universidad)iterator.next()));
        //}
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        LNombreFacultad = new javax.swing.JLabel();
        LNombreDecano = new javax.swing.JLabel();
        LUbicacion = new javax.swing.JLabel();
        TFieldNombreFacultad = new javax.swing.JTextField();
        TFieldNombreDecano = new javax.swing.JTextField();
        TFieldUbicacion = new javax.swing.JTextField();
        LUniversidad = new javax.swing.JLabel();
        CBUniversidad = new javax.swing.JComboBox();

        setLayout(new java.awt.GridBagLayout());

        LNombreFacultad.setText("Nombre de la Facultad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
        add(LNombreFacultad, gridBagConstraints);

        LNombreDecano.setText("Nombre del Decano:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 10, 0, 0);
        add(LNombreDecano, gridBagConstraints);

        LUbicacion.setText("Ubicaci√≥n:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 10, 0, 0);
        add(LUbicacion, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 255;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 10, 0, 10);
        add(TFieldNombreFacultad, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 255;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 0, 10);
        add(TFieldNombreDecano, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 255;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 10, 23, 10);
        add(TFieldUbicacion, gridBagConstraints);

        LUniversidad.setText("Universidad:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(24, 10, 0, 0);
        add(LUniversidad, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 233;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 10, 0, 10);
        add(CBUniversidad, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JComboBox CBUniversidad;
    private javax.swing.JLabel LNombreDecano;
    private javax.swing.JLabel LNombreFacultad;
    private javax.swing.JLabel LUbicacion;
    private javax.swing.JLabel LUniversidad;
    private javax.swing.JTextField TFieldNombreDecano;
    private javax.swing.JTextField TFieldNombreFacultad;
    private javax.swing.JTextField TFieldUbicacion;
    // End of variables declaration//GEN-END:variables

    @Override
    public void Guardar(Estado_Ventana estado_Ventana ) {
        try {
            entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
            FacultadJpaController facultadJpaController = new FacultadJpaController(entityManagerFactory);
            facultad.setNombre(TFieldNombreFacultad.getText());
            facultad.setUniversidadid((Universidad) CBUniversidad.getSelectedItem());
            facultad.setDecano(TFieldNombreDecano.getText());
            facultad.setUbicacion(TFieldUbicacion.getText());          
                        
            if (estado_Ventana.equals(Estado_Ventana.NUEVO)) {
                facultadJpaController.create(facultad);
            } else {
                facultad.setId(facultad.getId());
                facultadJpaController.edit(facultad);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    @Override
    public void Eliminar() {
        try {
            entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
            FacultadJpaController facultadJpaController =new FacultadJpaController(entityManagerFactory);
            //facultad.setId(facultad.getId());
            facultadJpaController.destroy(facultad.getId());            
        } catch (NonexistentEntityException ex) {
            ex.printStackTrace();
        } catch (IllegalOrphanException ex) {
            Logger.getLogger(PFacultad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void ActivarEdicion() {
        
    }

    @Override
    public void Nuevo() {
        facultad = new Facultad();
    }

    @Override
    public void Seleccionar(Vector vectorSeleccion) {
        /*entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        FacultadJpaController facultadJpaController = new FacultadJpaController(entityManagerFactory);
        facultad = facultadJpaController.findFacultad(Integer.valueOf(vectorSeleccion.get(0).toString()));
        CBUniversidad.setSelectedItem(facultad.getUniversidadid());
        TFieldNombreFacultad.setText(facultad.getNombre());
        TFieldNombreDecano.setText(facultad.getDecano());
        TFieldUbicacion.setText(facultad.getUbicacion());   */  
    }

    @Override
    public List<Object[]> getListaParaTabla() {
        entityManagerFactory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        FacultadJpaController facultadJpaController = new FacultadJpaController(entityManagerFactory);

        List<Object[]> list = new ArrayList();
        for (Facultad facultad : facultadJpaController.findFacultadEntities()) {
            list.add(new Object[]{
                facultad.getUniversidadid().getNombre(),
                facultad.getNombre(), 
                facultad.getDecano(),
                facultad.getUbicacion() 
            });
        }
        return list;
    }

    @Override
    public String[] getNombreDeColumnas() {
        return new String[]{"Universidad", "Nombre","Decano","Ubicacion"};
    }  
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Unicordoba.Registro_Control.Interfaz_Secundaria.Cursos;

import Unicordoba.Registro_Control.Base_de_Datos.Controlador.CursoJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.ProgramaJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.SalonJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.SedeJpaController;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.IllegalOrphanException;
import Unicordoba.Registro_Control.Base_de_Datos.Controlador.exceptions.NonexistentEntityException;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Curso;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Programa;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Salon;
import Unicordoba.Registro_Control.Base_de_Datos.Entity.Sede;
import Unicordoba.Registro_Control.Interfaz_Secundaria.BasicaUno.Estado_Ventana;
import Unicordoba.Registro_Control.Interfaz_Secundaria.BasicaUno.IPanelEdicion;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.text.html.parser.Entity;

/**
 *
 * @author Hp
 */
public class PCursos extends javax.swing.JPanel implements IPanelEdicion{

    /**
     * Creates new form PCursos
     */
    public PCursos() {
        initComponents();
        CargarPrograma();
        CargarSede();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        cCapacidad = new javax.swing.JTextField();
        cNumero = new javax.swing.JTextField();
        cID = new javax.swing.JLabel();
        cUbicacion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cPrograma = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cSede = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jLabel6.setText("UBICACION SALON");

        cID.setBackground(new java.awt.Color(255, 255, 255));
        cID.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cID.setOpaque(true);

        jLabel1.setText("ID");

        jLabel2.setText("PROGRAMA");

        jLabel3.setText("SEDE");

        jLabel4.setText("CAPACIDAD SALON");

        jLabel5.setText("NUMERO SALON");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cID, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cSede, 0, 169, Short.MAX_VALUE)
                                    .addComponent(cCapacidad)
                                    .addComponent(cNumero, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(cUbicacion))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cID, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cPrograma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cSede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cUbicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cCapacidad;
    private javax.swing.JLabel cID;
    private javax.swing.JTextField cNumero;
    private javax.swing.JComboBox cPrograma;
    private javax.swing.JComboBox cSede;
    private javax.swing.JTextField cUbicacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
    EntityManagerFactory factory;
    private  Curso curso = null;
    private Salon salon = null; 
    
    @Override
    public void Guardar(Estado_Ventana estado_Ventana) {
  try {
         factory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
             
        salon.setUbucacion(cUbicacion.getText());
        salon.setCapacidadPersonas(Integer.valueOf(cCapacidad.getText()));
        salon.setNumero(Integer.valueOf(cNumero.getText()));
        salon.setSedeid((Sede) cSede.getSelectedItem()) ;
            SalonJpaController sjc = new SalonJpaController(factory);
            if (estado_Ventana.equals(Estado_Ventana.NUEVO)) {
                sjc.create(salon);
            }
            else
            {
            sjc.edit(salon);
            }
        
            curso.setSalonid(salon);
            curso.setProgramaid((Programa)cPrograma.getSelectedItem());
            
            CursoJpaController cjc = new CursoJpaController(factory);
            if (estado_Ventana.equals(Estado_Ventana.NUEVO)){
                cjc.create(curso);
            }
            else {
               cjc.edit(curso);
            }
             
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void Eliminar() {
    EntityManagerFactory factory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        try {
            CursoJpaController cjc = new CursoJpaController(factory);
            cjc.destroy(curso.getId());
            
            SalonJpaController sjc = new SalonJpaController(factory);
            sjc.destroy(salon.getId());
            
       
    }   catch (IllegalOrphanException ex) {
            Logger.getLogger(PCursos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(PCursos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    @Override
    public void ActivarEdicion() {
    
    }

    @Override
    public void Nuevo() {
        salon = new Salon();
        curso = new Curso();
  
    }

    @Override
    public void Seleccionar(Vector vectorSeleccion) {
    factory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
    CursoJpaController cjc = new CursoJpaController(factory);
    
    this.curso = cjc.findCurso(Integer.valueOf(vectorSeleccion.get(0).toString()));
    this.salon = curso.getSalonid();
    
     cID.setText(curso.getId().toString());
     cUbicacion.setText(curso.getSalonid().getUbucacion());
     cCapacidad.setText(curso.getSalonid().getCapacidadPersonas()+"");
     cNumero.setText(curso.getSalonid().getNumero()+"");
     cSede.setSelectedItem(salon.getSedeid());
     cPrograma.setSelectedItem(curso.getProgramaid().getNombre());
         
    }

    @Override
    public List<Object[]> getListaParaTabla() {
    factory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
     CursoJpaController cjc = new CursoJpaController(factory);
     
      List<Object[]> list = new ArrayList();
      for(Curso curso : cjc.findCursoEntities()) {
          list .add(new Object[]{
          curso.getId(),
          curso.getSalonid().getNumero(),
          curso.getSalonid().getCapacidadPersonas(),
          curso.getSalonid().getUbucacion()
          });
      
      }
      return list;
    }

    @Override
    public String[] getNombreDeColumnas() {
     return new String[]{ "ID","NUMERO","CAPASIDAD DEL SALON","UBICACION"};  
    }
    
    
  private void CargarSede() {
      factory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
        List<Sede> list = new SedeJpaController(factory).findSedeEntities();
        for (Sede list1 : list) {
            cSede.addItem(list1);
        }
    }
   private void CargarPrograma(){
    factory = Persistence.createEntityManagerFactory("R-C_Unicor_LoricaPU");
   List<Programa> list1 = new ProgramaJpaController(factory).findProgramaEntities();
    for(Programa list2 : list1){
       cPrograma.addItem(list2);
   }
   }
}
